{"mappings":"AACA,MAAM,mBAAmB,SAAS,aAAa,CAAC;AAChD,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,QAAQ,EAAE;AAChB,SAAS,gBAAgB,CAAC;AAC1B,sBAAsB;AACtB,yBAAyB;AAEzB,SAAS,gBAAgB,CAAC,SAAS,SAAU,KAAK;IAChD,MAAM,qBAAqB,MAAM,MAAM,KAAK;IAE5C,IAAI,oBACF,gBAAgB,MAAM,MAAM,CAAC,KAAK,GAAG,SAAS;AAElD;AAEA,SAAS,gBAAgB,CAAC,SAAS,SAAU,KAAK;IAChD,MAAM,kBACJ,MAAM,MAAM,KAAK,aACjB,MAAM,MAAM,KAAK,gBACjB,MAAM,MAAM,KAAK;IACnB,MAAM,oBAAoB,MAAM,MAAM,CAAC,IAAI,KAAK;IAEhD,IAAI,iBACF,aAAa;SACR,IAAG,mBACR,eAAe;AAEnB;AAEA,SAAS,aAAa,KAAK;IACzB,IAAI,MAAM,MAAM,IAAI,WAClB;SACK,IAAI,MAAM,MAAM,IAAI,cACzB;SACK,IAAI,MAAM,MAAM,IAAI,YACzB;AAEJ;AAEA,SAAS,eAAe,KAAK;IACzB,MAAM,iBAAiB,SAAS,gBAAgB,CAAC;IAEjD,MAAM,iBAAiB;WAAI;KAAe,CAAC,KAAK,CAAC,CAAA,gBAAiB,cAAc,OAAO,KAAK;IAC5F,QAAQ,GAAG,CAAC,kBAAiB;IAC7B,IAAG,gBACD;SAEA;AAEN;AAEA,SAAS,gBAAgB,KAAK;IAC5B,mDAAmD;IACnD,QAAQ,GAAG,CAAC,kBAAkB;IAE9B,IAAI,cAAc,IAAK;QACrB;QACA,QAAQ,GAAG,CAAC;IACd,OAAO,IAAI,cAAc,IAAI;QAC3B,wCAAwC;QACxC;QACA,QAAQ,GAAG,CAAC;IACd;AACA,qCAAqC;AAErC,6BAA6B;AAC7B,kBAAkB;AAClB,qBAAqB;AACrB,wBAAwB;AAC1B;AAIA,SAAS;IACP,UAAU,QAAQ,GAAG;IACrB,WAAW,QAAQ,GAAG;IACtB,aAAa,QAAQ,GAAG;AAC1B;AAEA,SAAS;IACP,UAAU,QAAQ,GAAG;IACrB,WAAW,QAAQ,GAAG;IACtB,aAAa,QAAQ,GAAG;AAC1B;AAEA,SAAS;IACP,UAAU,KAAK,GAAG;AAEpB;AAEA,SAAS;IACP,MAAM,KAAK,SAAS,aAAa,CAAC;IAClC,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,iBAAiB,WAAW,CAAC;IAC7B,iBAAiB,WAAW,CAAC;IAC7B,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,MAAM,CAAC,CAAC;IACpD,SAAS,YAAY,CAAC,QAAQ;IAC9B,SAAS,YAAY,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,MAAM,CAAC,CAAC;IAC9D,GAAG,SAAS,GAAG,UAAU,KAAK;IAC9B,MAAM,IAAI,CAAC;IACX;AACF;AAEA,SAAS;IACP,MAAM,kBAAkB,SAAS,gBAAgB,CAC/C;IAEF,iCAAiC;IAEjC,gBAAgB,OAAO,CAAC,CAAC;QACvB,iBAAiB,WAAW,CAAC,QAAQ,eAAe;QACpD,iBAAiB,WAAW,CAAC;IAC/B;AACF;AAEA,SAAS;IACP,MAAM,yBAAyB,SAAS,aAAa,CACnD;IAEF,iCAAiC;IAEjC,uBAAuB,sBAAsB,CAAC,SAAS,GAAG,UAAU,KAAK;IACzE;AACF","sources":["main.js"],"sourcesContent":["\r\nconst olParrentElement = document.querySelector(\"ol\");\r\nconst addButton = document.querySelector(\".btn\");\r\nconst editButton = document.querySelector(\".btn_1\");\r\nconst deleteButton = document.querySelector(\".btn_2\");\r\nconst textInput = document.getElementById(\"text-input\");\r\nconst tasks = [];\r\ndocument.querySelectorAll(\"input[type='checkbox']\");\r\n// resetButtonState();\r\n// resetTextInputState();\r\n\r\ndocument.addEventListener(\"keyup\", function (event) {\r\n  const isEventInTextInput = event.target === textInput;\r\n\r\n  if (isEventInTextInput) {\r\n    handleTextInput(event.target.value); // event \r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"click\", function (event) {\r\n  const isEventOnButton =\r\n    event.target === addButton ||\r\n    event.target === deleteButton ||\r\n    event.target === editButton;\r\n  const isEventOnCheckbox = event.target.type === 'checkbox';\r\n    \r\n  if (isEventOnButton) {\r\n    handleButton(event);\r\n  } else if(isEventOnCheckbox){\r\n    handleCheckbox(event);\r\n  }\r\n});\r\n\r\nfunction handleButton(event) {\r\n  if (event.target == addButton) {\r\n    addTaskToList();\r\n  } else if (event.target == deleteButton) {\r\n    deleteTaskFromList();\r\n  } else if (event.target == editButton) {\r\n    editTask();\r\n  }\r\n}\r\n\r\nfunction handleCheckbox(event){\r\n    const checkboxInputs = document.querySelectorAll(\"input[type='checkbox']\");\r\n\r\n    const isAllUnchecked = [...checkboxInputs].every(checkboxInput => checkboxInput.checked === false);\r\n    console.log(\"isAllUnchecked\",isAllUnchecked ) \r\n    if(isAllUnchecked){\r\n      resetButtonState();\r\n    } else {\r\n      resetButtonStateWhenEdit()\r\n    }\r\n}\r\n\r\nfunction handleTextInput(value) {\r\n  // jeśli text input pusty to edit i delete disabled\r\n  console.log(\"handletextinut\", value)\r\n  \r\n  if (textInput !== \"\" ) {\r\n    resetButtonState();\r\n    console.log(\"Input not empty\");\r\n  } else if (textInput === \"\") {\r\n    // alert('Please write down some text!')\r\n    resetButtonStateWhenEdit();\r\n    console.log(\"Input empty\");\r\n  }\r\n  // jesli text input nie pusty to text\r\n\r\n  // ZDARZENIE ADD BUTTON CLICK\r\n  // 1 addTaskToList\r\n  // 2 resetButtonState\r\n  // 3 resetTextInputState\r\n}\r\n\r\n\r\n\r\nfunction resetButtonState() {\r\n  addButton.disabled = false;\r\n  editButton.disabled = true;\r\n  deleteButton.disabled = true;\r\n}\r\n\r\nfunction resetButtonStateWhenEdit() {\r\n  addButton.disabled = true;\r\n  editButton.disabled = false;\r\n  deleteButton.disabled = false;\r\n}\r\n\r\nfunction resetTextInputState() {\r\n  textInput.value = \"\";\r\n\r\n}\r\n\r\nfunction addTaskToList() {\r\n  const li = document.createElement(\"li\");\r\n  const checkbox = document.createElement(\"input\");\r\n  olParrentElement.appendChild(li);\r\n  olParrentElement.appendChild(checkbox);\r\n  li.setAttribute(\"id\", `list_Element_${tasks.length}`);\r\n  checkbox.setAttribute(\"type\", \"checkbox\");\r\n  checkbox.setAttribute(\"id\", `checkbox_Element_${tasks.length}`);\r\n  li.innerText = textInput.value;\r\n  tasks.push(li);\r\n  resetTextInputState();\r\n}\r\n\r\nfunction deleteTaskFromList() {\r\n  const checkedCheckbox = document.querySelectorAll(\r\n    \"input[type='checkbox']:checked\"\r\n  );\r\n  // jak to moge zapisać oddzielnie\r\n\r\n  checkedCheckbox.forEach((element) => {\r\n    olParrentElement.removeChild(element.previousSibling);\r\n    olParrentElement.removeChild(element);\r\n  });\r\n}\r\n\r\nfunction editTask() {\r\n  const checkedCheckbox_toEdit = document.querySelector(\r\n    'input[type=\"checkbox\"]:checked'\r\n  );\r\n  // jak to moge zapisać oddzielnie\r\n\r\n  checkedCheckbox_toEdit.previousElementSibling.innerText = textInput.value;\r\n  resetTextInputState();\r\n}\r\n\r\n"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}